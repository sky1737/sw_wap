#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##


# HTTPS server
#
server {
	#修改 根路径的话 全局替换 "/var/www/new.yun-ws.com" 即可

	#错误日志
	error_log /alidata/www/qh.old.yws.dev/nginx_err.log;

	#站点根目录
	root        /alidata/www/qh.old.yws.dev;
	index       index.html index.htm index.php;

	#可访问域名
	server_name www.191ws.com;
	listen 80;
	#ssl on;
	#listen 443 ssl http2;
	#赫尔曼密钥 openssl dhparam -out dhparam.pem 2048
	#ssl_dhparam /alidata/www/wap.yunwenshang.com/src/ssl_cert/dhparam.pem;
    #证书路径
	#ssl_certificate /alidata/www/wap.yunwenshang.com/src/ssl_cert/yunwenshang.com/crt.crt;
	#ssl_certificate_key /alidata/www/wap.yunwenshang.com/src/ssl_cert/yunwenshang.com/key.key;

	#只使用安全的 SSL 协议，使用安全协议
	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	#只使用安全的加密算法
	#ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

	#缓解 BEAST 攻击
	#ssl_prefer_server_ciphers on;

	#缓存连接凭据
	#ssl_session_cache shared:SSL:20m;
	#ssl_session_timeout 60m;

	#OCSP 缝合
	#ssl_stapling on;
	#ssl_stapling_verify on;
	#ssl_trusted_certificate /etc/nginx/cert/trustchain.crt;
	#resolver 233.5.5.5 233.6.6.6 valid=300s;

	#启用 HSTS 此举直接跳过 301 跳转，还降低了中间人攻击的风险！
	#add_header Strict-Transport-Security max-age=15768000;

	#include       mime.types;
	#default_type  application/octet-stream;

location @rew {
	rewrite ^/category\\/([0-9]+)$ /index.php?c=category&a=index&id=$1 last;
	rewrite ^/category\\/([0-9]+)\\/([0-9]+)$ /index.php?c=category&a=index&id=$1&page=$2;
	rewrite ^/category\\/([0-9]+)\\/prop_([0-9_]+)$ /index.php?c=category&a=index&id=$1&prop=$2;
	rewrite ^/category\\/([0-9]+)\\/prop_([0-9_]+)\\/([0-9]+)$ /index.php?c=category&a=index&id=$1&page=$3&prop=$2;
	rewrite ^/category\\/([0-9]+)\\/(sort|sales|price|collect|distance)\\/(asc|desc)$ /index.php?c=category&a=index&id=$1&order=$2&sort=$3;
	rewrite ^/category\\/([0-9]+)\\/(sort|sales|price|collect|distance)\\/(asc|desc)\\/([0-9]+)$ /index.php?c=category&a=index&id=$1&order=$2&sort=$3&page=$4;
	rewrite ^/category\\/([0-9]+)\\/(sort|sales|price|collect|distance)\\/(asc|desc)\\/prop_([0-9_]+)$ /index.php?c=category&a=index&id=$1&order=$2&sort=$3&prop=$4;
	rewrite ^/category\\/([0-9]+)\\/(sort|sales|price|collect|distance)\\/(asc|desc)\\/prop_([0-9_]+)\\/([0-9]+)$ /index.php?c=category&a=index&id=$1&order=$2&sort=$3&page=$5&prop=$4;
	rewrite ^/category\\/([0-9]+)\\/([0-9]+)\\/([0-9]+)$ /index.php?c=category&a=index&id=$1&start_price=$2&end_price=$3;
	rewrite ^/category\\/([0-9]+)\\/([0-9]+)\\/([0-9]+)\\/([0-9]+)$ /index.php?c=category&a=index&id=$1&start_price=$2&end_price=$3&page=$4;
	rewrite ^/category\\/([0-9]+)\\/prop_([0-9_]+)\\/([0-9]+)\\/([0-9]+)$ /index.php?c=category&a=index&id=$1&start_price=$3&end_price=$4&prop=$2;
	rewrite ^/category\\/([0-9]+)\\/([0-9]+)\\/([0-9]+)\\/prop_([0-9_]+)\\/([0-9]+)$ /index.php?c=category&a=index&id=$1&start_price=$2&end_price=$3&page=$5&prop=$4;
	rewrite ^/category\\/([0-9]+)\\/(sort|sales|price|collect|distance)\\/(asc|desc)\\/([0-9]+)\\/([0-9]+)$ /index.php?c=category&a=index&id=$1&order=$2&sort=$3&start_price=$4&end_price=$5;
	rewrite ^/category\\/([0-9]+)\\/(sort|sales|price|collect|distance)\\/(asc|desc)\\/([0-9]+)\\/([0-9]+)\\/([0-9]+)$ /index.php?c=category&a=index&id=$1&order=$2&sort=$3&start_price=$4&end_price=$5&page=$6;
	rewrite ^/category\\/([0-9]+)\\/(sort|sales|price|collect|distance)\\/(asc|desc)\\/([0-9]+)\\/([0-9]+)\\/prop_([0-9_]+)$ /index.php?c=category&a=index&id=$1&order=$2&sort=$3&start_price=$4&end_price=$5&prop=$6;
	rewrite ^/category\\/([0-9]+)\\/(sort|sales|price|collect|distance)\\/(asc|desc)\\/([0-9]+)\\/([0-9]+)\\/prop_([0-9_]+)\\/([0-9]+)$ /index.php?c=category&a=index&id=$1&order=$2&sort=$3&start_price=$4&end_price=$5&page=$7&prop=$6;
	rewrite ^/goods\\/([0-9]+)\\.html$ /index.php?c=goods&a=index&id=$1;
	rewrite ^/store\\/([0-9]+)\\.html$ /index.php?c=store&a=index&id=$1;
	rewrite ^/coupon\\/couponlist\\/([0-9]+)\\.html$ /index.php?c=coupon&a=couponlist&id=$1;
	rewrite ^/help\\.html$ /index.php?c=help&a=index;
	rewrite ^/help\\/(\\d+)\\/(\\d+)\\.html$ /index.php?c=help&a=index&fid=$1&cat=$2;
}

        # 禁止 ftp 上载 目录 执行 php
        location ~* /upload/.*\.php$ {
           deny all;
         }

	#重写规则
    location / {
        try_files $uri $uri/ @rew;
    }

	#脚本解析
    location ~ \.php {
        fastcgi_pass  127.0.0.1:9020;
        fastcgi_index /index.php;

        fastcgi_connect_timeout 10; #连接到后端fastcgi超时时间
        fastcgi_send_timeout 10; #向fastcgi请求超时时间(这个指定值已经完成两次握手后向fastcgi传送请求的超时时间)
        #fastcgi_rend_timeout=300; #接收fastcgi应答超时时间，同理也是2次握手后

        #指定本地需要多少和多大的缓冲区来缓冲fastcgi应答请求，假设一个php或java脚本所产生页面大小为256kb,那么会为其分配4个64kb的缓冲来缓存；
        #若页面大于256kb,那么大于的256kb的部分会缓存到fastcgi_temp指定路径中，这并非是个好办法，内存数据处理快于硬盘，一般该值应该为站点中php/java脚本所产生页面大小中间值，如果站点大部分脚本所产生的页面大小为256kb，那么可把值设置为16 16k,4 64k等
        fastcgi_buffers 4 256k;
        fastcgi_buffer_size 256k; #读取fastcgi应答第一部分需要多大缓冲区，该值表示使用1个64kb的缓冲区读取应答第一部分(应答头),可以设置为fastcgi_buffers选项缓冲区大小
        #fastcgi_busy_buffers_size 128k; #默认值是fastcgi_buffer的2倍
        #fastcgi_temp_file_write_size 128k; #写入缓存文件使用多大的数据块，默认值是fastcgi_buffer的2倍

        ##缓存路径文件，目录结构等级，关键字区域实际和非活动时间
        #fastcgi_cache_path /usr/local/nginx/fastcgi_cache levels=1:2 keys_zone=TEST:10m inactive=5m;
        #fastcgi_cache TEST;
        #fastcgi_cache_valid 200 302 1h;
        #fastcgi_cache_valid 301 1d;
        #fastcgi_cache_valid any 1m;

        include fastcgi_params;
        fastcgi_split_path_info       ^(.+\.php)(/.+)$;
        fastcgi_param PATH_INFO       $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

	#禁止访问
    location ~ /\.ht {
        deny all;
    }

}
